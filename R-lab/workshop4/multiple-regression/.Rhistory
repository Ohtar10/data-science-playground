help("read.table")
dataset <- read.table('./dataset/sales-dataset.csv', header = TRUE)
View(dataset)
pairs(dataset, panel = panel.smooth)
help("influencePlot")
library(lmtest)
library(car)
help(influencePlot
help(influencePlot)
help("influencePlot")
cor(dataset, use = "everything", method = "pearson")
model <- lm(ventas ~ publicidad + n.cuentas + n.competidores + potencial.mercado, data = df)
model <- lm(ventas ~ publicidad + n.cuentas + n.competidores + potencial.mercado, data = df)
model <- lm(ventas ~ publicidad + n.cuentas + n.competidores + potencial.mercado, data = dataset)
summary(model)
rm(model)
gprsd_rm <- lm(ventas ~ publicidad + n.cuentas + n.competidores + potencial.mercado, data = dataset)
summary(gprsd_rm)
gprsd_rm <- lm(ventas ~ n.cuentas + n.competidores, data = dataset)
summary(gprsd_rm)
plot(modelo, which = 1)
plot(gprsd_rm, which = 1)
plot(gprsd_rm, which = 2)
plot(gprsd_rm, which = 3) #
plot(gprsd_rm, which = 5)
dataset$fitted.model <- fitted(gprsd_rm)
dataset$residuals.model <- residuals(gprsd_rm)
dataset$rstudent.model <- rstudent(gprsd_rm)
ks.test(dataset$rstudent.model, "pnorm")
hist(dataset$rstudent.model, xlab = "Residuos", main = "Histograma residuos")
hist(dataset$rstudent.model, xlab = "Residuos", main = "Histograma residuos", color = "cornflowerblue")
help("hist")
hist(dataset$rstudent.model, xlab = "Residuos", main = "Histograma residuos", col = "cornflowerblue")
ks.test(dataset$rstudent.model, "pnorm")
library(lmtest)
bptest(modelo, studentize = FALSE, data = df)
bptest(gprsd_rm, studentize = FALSE, data = df)
anova(gprsd_rm, type = "II")
anova(gprsd_rm)
dwtest(gprsd_rm, alternative = "two.sided", data = df)
outlierTest(modelo)
outlierTest(gprsd_rm)
bptest(gprsd_rm, studentize = FALSE, data = dataset)
dwtest(gprsd_rm, alternative = "two.sided", data = dataset)
vif(lm(ventas ~ n.cuentas + n.competidores, data = dataset))
n.cuentas0 <- seq(min(dataset$n.cuentas), max(dataset$n.cuentas), length = 10)
n.competidores0 <- seq(min(dataset$n.competidores), max(dataset$n.competidores), length = 10)
prediction <- predict(gprsd_rm, data.frame(n.cuentas = n.cuentas0, n.competidores = n.competidores0), interval = "confidence", se.fit = TRUE, data = dataset)
head(prediction)
matplot(n.cuentas0, prediction$fit, type = "l", xlab = "Numero de Cuentas", ylab = "Ventas")
matplot(n.competidores0, prediction$fit, type = "l", xlab = "Numero de Competidores", ylab = "Ventas")
matplot(n.cuentas0, prediction$fit, type = "l", xlab = "Numero de Cuentas", ylab = "Ventas")
matplot(n.competidores0, prediction$fit, type = "l", xlab = "Numero de Competidores", ylab = "Ventas")
n.cuentas0
n.competidores0
dataset$n.competidores
mean(dataset)
mean(dataset$n.competidores)
data.frame(n.cuentas = n.cuentas0, n.competidores0 = mean(dataset$n.competidores))
floor(mean(dataset$n.competidores))
mean.competidores <- mean(dataset$n.competidores)
prediction <- predict(gprsd_rm, data.frame(n.cuentas = n.cuentas0, n.competidores = mean.competidores), interval = "confidence", se.fit = TRUE, data = dataset)
head(prediction)
matplot(n.cuentas0, prediction$fit, type = "l", xlab = "Numero de Cuentas", ylab = "Ventas")
n.cuentas0
help("seq")
seq(min(dataset$n.cuentas), max(dataset$n.cuentas), length = 10, by=2)
seq(min(dataset$n.cuentas), max(dataset$n.cuentas), length = 10,by = 2)
seq(min(dataset$n.cuentas), max(dataset$n.cuentas), by =2, length = 10)
seq(min(dataset$n.cuentas), max(dataset$n.cuentas))
seq(min(dataset$n.cuentas), max(dataset$n.cuentas), length.out = 10)
seq(min(dataset$n.cuentas), max(dataset$n.cuentas), length.out = 10, by = 2)
seq(min(dataset$n.cuentas), max(dataset$n.cuentas), length.out = 10, by = 1)
seq(min(dataset$n.cuentas), max(dataset$n.cuentas), by = 1)
seq(min(dataset$n.cuentas), max(dataset$n.cuentas), by = 2)
seq(min(dataset$n.cuentas), max(dataset$n.cuentas), by = 3)
m <- min(dataset$n.cuentas)
mx <- max(dataset$n.cuentas)
seq(min(dataset$n.cuentas), max(dataset$n.cuentas), by = (mx - m)/10)
seq(min(dataset$n.cuentas), max(dataset$n.cuentas), by = (mx - m)/-1)
seq(min(dataset$n.cuentas), max(dataset$n.cuentas), by = (mx - m)/9)
n.cuentas0
floor(n.cuentas0)
n.cuentas0 <- floorÃ‡(seq(min(dataset$n.cuentas), max(dataset$n.cuentas), length = 10))
n.cuentas0 <- floor(seq(min(dataset$n.cuentas), max(dataset$n.cuentas), length = 10))
mean.competidores <- floor(mean(dataset$n.competidores))
prediction <- predict(gprsd_rm, data.frame(n.cuentas = n.cuentas0, n.competidores = mean.competidores), interval = "confidence", se.fit = TRUE, data = dataset)
head(prediction)
matplot(n.cuentas0, prediction$fit, type = "l", xlab = "Numero de Cuentas", ylab = "Ventas")
n.cuentas0
mean.cuentas <- floor(mean(dataset$n.cuentas))
mean.cuentas
mean(dataset$n.cuentas)
ceiling(mean(dataset$n.cuentas))
n.competidores0 <- floor(seq(min(dataset$n.competidores), max(dataset$n.competidores), length = 10))
n.competidores0
prediction2 <- predict(gprsd_rm, data.frame(n.cuentas = mean.cuentas, n.competidores = n.competidores0), interval = "confidence", se.fit = TRUE, data = dataset)
head(prediction2)
matplot(n.competidores0, prediction2$fit, type = "l", xlab = "Numero de Competidores", ylab = "Ventas")
