{
    "collab_server" : "",
    "contents" : "#!/usr/bin/Rscript\n\nif(FALSE){\n  \"\n  Institución Universitaria Antonio José Camacho\n  Diplomado de Data Science\n  06-2017\n  Profesor: Luis Ramirez\n\n  Por: Luis Eduardo Ferro Diez\n  \n  Taller 3\n  Punto 1, Regresión lineal simple\n\n  Escenario: Se desea medir la dependencia entre dos variables X y Y \n  mediante un modelo de regresion lineal simple, se planteara entonces\n  el modelo y se podran a prueba los supuestos.\n  \n  X: Temperatura en grados Farenheit\n  Y: Libras de vapor usadas\n  \"\n  \n}\n\n# Importamos las librerias necesarias de RCommander\nlibrary(RcmdrMisc)\n\n# Cargamos el dataset en memoria\nDataset <- \n  readXL(\"./datasets/proceso_industrial.xlsx\", \n         rownames=FALSE, header=TRUE, na=\"\", sheet=\"Sheet1\", stringsAsFactors=TRUE)\n\n# Construimos un diagrama de dispersión para darnos cuenta si hay una posible relación entre las variables\nscatterplot(Y~X, reg.line=lm, smooth=FALSE, spread=FALSE, boxplots=FALSE, span=0.5, ellipse=FALSE, levels=c(.5, .9), data = Dataset)\n# Segun el grafico obtenido, parece posible una relacion lineal entre ambas variables\n\n# Procedemos a obtener la matriz de correlacion\nrcorr.adjust(Dataset[,c(\"X\",\"Y\")], type=\"pearson\", use=\"complete\")\n# Observamos una relacion moderadamente fuerte en los cruces de X y Y en la matriz y que esta es simetrica\n# Siendo H0: No hay correlacion y H1: Hay correlacion, observamos que el p-value es 0.0001 que es inferior al valor de significancia del 0.05\n# Por lo tanto rechazamos H0 y confirmamos que hay una correlacion entre las dos variables\n\n# Estimamos un modelo inicial para poner a prueba, ergo, establecemos un modelo de regresion lineal\nindustrial_process_rm <- lm(Y~X, data=Dataset)\nsummary(industrial_process_rm)\n# Nuestro intercepto es 13.62299 y nuestra pendiente es -0.07983, tenemos p-value bastante pequeños por lo que asumimos, que son correctos por ahora\n# Entonces, basados en y = B0 + B1x, nuestro modelo propuesto es: y = 13.62299 -0.07983x\n\n# Con el intercepto dado, esperamos que cuando no hay temperatura sobre el proceso, las libras de vapor esperadas son 13.62299\n# Con la pendiente dada, esperamos que por cada grado de temperatura que aumenta, se espera las libras reduzcan en -0.07983\n# Obtuvimos un r^2 de 0.7144 lo cual nos indica que el modelo nos explica el 71.44% de los valores lo cual indica que es un modelo moderadamente bueno\n\n# Ahora debemos poner a prueba el modelo con los supuestos\n\n# Realizamos prueba de linealidad, i.e. H0: B0=B1=0 y H1: B0!=0 o B1!=0\nAnova(industrial_process_rm, type=\"II\")\n# Obtenemos un p-valor de 1.055e-07 que es inferior al valor de significancia 0.05 por lo tanto rechazamos H0, nuestro modelo sirve\n\n# Es la pendiente estadisticamente igual a 0?\n# Nuestro p-valor obtenido para la pendiente fue de 1.05e-07 siendo inferior a nuestro valor de significancia 0.05, rechazamos H0\n# y concluimos que la pendiente no es estadisticamente 0, nuestro modelo se mantiene\n\n# Es el intercepto estadisticamente igual a 0?\n# Nuestro p-valor obtenido para el intercepto fue de <2e-1 siendo inferior a nuestro valor de significancia 0.05, rechazamos H0\n# y concluimos que el intercepto no es estadisticamente 0, nuestro modelo se mantiene.\n\n# Ejecutamos test de heteroscedasticidad para verificar la varianza de los errores\n# Deberiamos esperar que la varianza de los errores sea constante\nlibrary(zoo, pos=19)\nlibrary(lmtest, pos=19)\nbptest(Y ~ X , varformula = ~ \n         fitted.values(industrial_process_rm), studentize=FALSE, data=Dataset)\n# Obtenemos un p-valor de 0.7508 lo cual nos indica que no debemos rechazar H0 lo que quiere decir que nuestro modelo continua sirviendo\n\n# Obtenemos las graficas descriptivas del comportamiento\noldpar <- par(oma=c(0,0,3,0), mfrow=c(2,2))\nplot(industrial_process_rm)\npar(oldpar)\n\n# Probamos ahora la correlacion de los errores\ndwtest(Y ~ X, alternative=\"two.sided\", data=Dataset)\n# Nuestro p-valor es 0.1005 siendo superior a nuestro valor de significancia 0.05, debemos quedarnos con H0 lo cual hace que el modelo siga sirviendo\n\n\n# Realizamos test de normalidad sobre los errores\n# Debemos entonces añadir al dataset el valor de los errores\nDataset <- within(Dataset, {\n  residuals.industrial_process_rm <- residuals(industrial_process_rm) \n})\n# Luego el test de normalidad sobre la nueva variable\nlibrary(nortest, pos=21)\nwith(Dataset, pearson.test(residuals.industrial_process_rm))\n# Nuestro p-valor es de 0.7246 siendo muy superior a nuestro valor de significancia 0.05, no debemos rechazar H0 por lo tanto la distribucion de los\n# errores es normal\n\n# Comprobamos lo anteriormente dicho con el histograma\nwith(Dataset, Hist(residuals.industrial_process_rm, scale=\"frequency\", breaks=4, col=\"darkblue\"))\n# A pesar de lo anterior, visualmente se observa una distribucion ligeramente anormal, aun asi se decide continuar con el modelo\n\n# ---------------------------------\n# Uso del Modelo | y = 13.62299 -0.07983x\n# ---------------------------------\n\n# Usamos el modelo para hallar valores dentro del dominio de la muestra con bandas de confianza\nx0 <- seq(min(Dataset$X), max(Dataset$X), length = 10)\nic <- predict(industrial_process_rm, data.frame(X = x0), interval = \"confidence\", se.fit = TRUE, data = Dataset)\nhead(ic)\n# plot the confidence bands?\nmatplot(x0, ic$fit, type = \"l\", xlab = \"X\", ylab = \"Y\")\n\n\n# predict a new value\nx1 <- seq(77, 90, length = 10)\nprediction <- predict(industrial_process_rm, data.frame(X = x1), interval = \"prediction\", se.fit = TRUE, data = Dataset)\nhead(prediction)\nmatplot(x1, prediction$fit, type = \"l\", xlab = \"X\", ylab = \"Y\")\n\n\n# Hallamos las libras de vapor estimadas para las siguientes temperaturas:\n# 70\npredict(industrial_process_rm, data.frame(X=70)) # 8.034981\n# 25\npredict(industrial_process_rm, data.frame(X=25)) # 11.62727\n# 86\npredict(industrial_process_rm, data.frame(X=86)) # 6.757722\n\n\n",
    "created" : 1497569127938.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "821188377",
    "id" : "1949EE30",
    "lastKnownWriteTime" : 1497664627,
    "last_content_update" : 1497664627562,
    "path" : "~/Data Science/Statistics/R-lab/workshop3/simple-linear-regression/simple-linear-regression.r",
    "project_path" : "simple-linear-regression.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}